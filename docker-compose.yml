version: "3.9"

services:

 
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - "${ES_PORT}:9200"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
      - "ELASTICSEARCH_USERNAME=elastic"
      - "ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}"
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    
  


  kibana:
    depends_on:
      - es
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    ports:
      - "${KIBANA_PORT}:5601"
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://es:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    mem_limit: ${MEM_LIMIT}




  enterprisesearch:
    depends_on:
      - es
      - kibana
    image: docker.elastic.co/enterprise-search/enterprise-search:${STACK_VERSION}
    ports:
      - "${ENTERPRISE_SEARCH_PORT}:3002"
    environment:
      - SERVERNAME=enterprisesearch
      - secret_management.encryption_keys=[${ENCRYPTION_KEYS}]
      - allow_es_settings_modification=true
      - elasticsearch.host=http://es:9200
      - elasticsearch.username=elastic
      - elasticsearch.password=${ELASTIC_PASSWORD}
      - kibana.external_url=http://kibana:5601
    mem_limit: ${MEM_LIMIT}
      





  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DJANGO_ALLOWED_HOSTS=${DOMAIN}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=1
    depends_on:
      - db
      - es



  websocket:
    build:
      context: .
      args:
        - DEV=true
    command: > 
      sh -c "
             daphne -b 0.0.0.0 -p 8001 app.asgi:application" 
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DJANGO_ALLOWED_HOSTS=${DOMAIN}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=app.settings
    ports:
      - "8001:8001"
    depends_on:
      - db  


  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery:
    restart: always
    build:
      context: .
    command: sh -c "celery -A app worker -l info"
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=app.settings
    depends_on:
      - db
      - redis
      - app

  celery-beat:
    restart: always
    build:
      context: .
    command: sh -c "celery -A app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=app.settings
    depends_on:
      - db
      - redis
      - app
  

  

volumes:
  dev-db-data:
    driver: local
  dev-static-data:
    driver: local
  enterprisesearchdata:
    driver: local
  esdata01:
    driver: local
  kibanadata:
    driver: local




